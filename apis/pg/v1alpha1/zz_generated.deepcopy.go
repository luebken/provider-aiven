//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentsObservation) DeepCopyInto(out *ComponentsObservation) {
	*out = *in
	if in.Component != nil {
		in, out := &in.Component, &out.Component
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.KafkaAuthenticationMethod != nil {
		in, out := &in.KafkaAuthenticationMethod, &out.KafkaAuthenticationMethod
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Route != nil {
		in, out := &in.Route, &out.Route
		*out = new(string)
		**out = **in
	}
	if in.SSL != nil {
		in, out := &in.SSL, &out.SSL
		*out = new(bool)
		**out = **in
	}
	if in.Usage != nil {
		in, out := &in.Usage, &out.Usage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentsObservation.
func (in *ComponentsObservation) DeepCopy() *ComponentsObservation {
	if in == nil {
		return nil
	}
	out := new(ComponentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentsParameters) DeepCopyInto(out *ComponentsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentsParameters.
func (in *ComponentsParameters) DeepCopy() *ComponentsParameters {
	if in == nil {
		return nil
	}
	out := new(ComponentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationObservation) DeepCopyInto(out *MigrationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationObservation.
func (in *MigrationObservation) DeepCopy() *MigrationObservation {
	if in == nil {
		return nil
	}
	out := new(MigrationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationParameters) DeepCopyInto(out *MigrationParameters) {
	*out = *in
	if in.Dbname != nil {
		in, out := &in.Dbname, &out.Dbname
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.IgnoreDbs != nil {
		in, out := &in.IgnoreDbs, &out.IgnoreDbs
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.SSL != nil {
		in, out := &in.SSL, &out.SSL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationParameters.
func (in *MigrationParameters) DeepCopy() *MigrationParameters {
	if in == nil {
		return nil
	}
	out := new(MigrationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pg) DeepCopyInto(out *Pg) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pg.
func (in *Pg) DeepCopy() *Pg {
	if in == nil {
		return nil
	}
	out := new(Pg)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Pg) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PgList) DeepCopyInto(out *PgList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Pg, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PgList.
func (in *PgList) DeepCopy() *PgList {
	if in == nil {
		return nil
	}
	out := new(PgList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PgList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PgObservation) DeepCopyInto(out *PgObservation) {
	*out = *in
	if in.Components != nil {
		in, out := &in.Components, &out.Components
		*out = make([]ComponentsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskSpaceCap != nil {
		in, out := &in.DiskSpaceCap, &out.DiskSpaceCap
		*out = new(string)
		**out = **in
	}
	if in.DiskSpaceDefault != nil {
		in, out := &in.DiskSpaceDefault, &out.DiskSpaceDefault
		*out = new(string)
		**out = **in
	}
	if in.DiskSpaceStep != nil {
		in, out := &in.DiskSpaceStep, &out.DiskSpaceStep
		*out = new(string)
		**out = **in
	}
	if in.DiskSpaceUsed != nil {
		in, out := &in.DiskSpaceUsed, &out.DiskSpaceUsed
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pg != nil {
		in, out := &in.Pg, &out.Pg
		*out = make([]PgPgObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceHost != nil {
		in, out := &in.ServiceHost, &out.ServiceHost
		*out = new(string)
		**out = **in
	}
	if in.ServicePort != nil {
		in, out := &in.ServicePort, &out.ServicePort
		*out = new(float64)
		**out = **in
	}
	if in.ServiceType != nil {
		in, out := &in.ServiceType, &out.ServiceType
		*out = new(string)
		**out = **in
	}
	if in.ServiceUsername != nil {
		in, out := &in.ServiceUsername, &out.ServiceUsername
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PgObservation.
func (in *PgObservation) DeepCopy() *PgObservation {
	if in == nil {
		return nil
	}
	out := new(PgObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PgParameters) DeepCopyInto(out *PgParameters) {
	*out = *in
	if in.AdditionalDiskSpace != nil {
		in, out := &in.AdditionalDiskSpace, &out.AdditionalDiskSpace
		*out = new(string)
		**out = **in
	}
	if in.CloudName != nil {
		in, out := &in.CloudName, &out.CloudName
		*out = new(string)
		**out = **in
	}
	if in.DiskSpace != nil {
		in, out := &in.DiskSpace, &out.DiskSpace
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceWindowDow != nil {
		in, out := &in.MaintenanceWindowDow, &out.MaintenanceWindowDow
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceWindowTime != nil {
		in, out := &in.MaintenanceWindowTime, &out.MaintenanceWindowTime
		*out = new(string)
		**out = **in
	}
	if in.Pg != nil {
		in, out := &in.Pg, &out.Pg
		*out = make([]PgPgParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PgUserConfig != nil {
		in, out := &in.PgUserConfig, &out.PgUserConfig
		*out = make([]PgUserConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Plan != nil {
		in, out := &in.Plan, &out.Plan
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProjectVPCID != nil {
		in, out := &in.ProjectVPCID, &out.ProjectVPCID
		*out = new(string)
		**out = **in
	}
	if in.ServiceIntegrations != nil {
		in, out := &in.ServiceIntegrations, &out.ServiceIntegrations
		*out = make([]ServiceIntegrationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.StaticIps != nil {
		in, out := &in.StaticIps, &out.StaticIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]TagParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TerminationProtection != nil {
		in, out := &in.TerminationProtection, &out.TerminationProtection
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PgParameters.
func (in *PgParameters) DeepCopy() *PgParameters {
	if in == nil {
		return nil
	}
	out := new(PgParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PgPgObservation) DeepCopyInto(out *PgPgObservation) {
	*out = *in
	if in.Dbname != nil {
		in, out := &in.Dbname, &out.Dbname
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.MaxConnections != nil {
		in, out := &in.MaxConnections, &out.MaxConnections
		*out = new(float64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Sslmode != nil {
		in, out := &in.Sslmode, &out.Sslmode
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PgPgObservation.
func (in *PgPgObservation) DeepCopy() *PgPgObservation {
	if in == nil {
		return nil
	}
	out := new(PgPgObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PgPgParameters) DeepCopyInto(out *PgPgParameters) {
	*out = *in
	if in.URISecretRef != nil {
		in, out := &in.URISecretRef, &out.URISecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PgPgParameters.
func (in *PgPgParameters) DeepCopy() *PgPgParameters {
	if in == nil {
		return nil
	}
	out := new(PgPgParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PgSpec) DeepCopyInto(out *PgSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PgSpec.
func (in *PgSpec) DeepCopy() *PgSpec {
	if in == nil {
		return nil
	}
	out := new(PgSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PgStatus) DeepCopyInto(out *PgStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PgStatus.
func (in *PgStatus) DeepCopy() *PgStatus {
	if in == nil {
		return nil
	}
	out := new(PgStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PgUserConfigObservation) DeepCopyInto(out *PgUserConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PgUserConfigObservation.
func (in *PgUserConfigObservation) DeepCopy() *PgUserConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PgUserConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PgUserConfigParameters) DeepCopyInto(out *PgUserConfigParameters) {
	*out = *in
	if in.AdditionalBackupRegions != nil {
		in, out := &in.AdditionalBackupRegions, &out.AdditionalBackupRegions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AdminPasswordSecretRef != nil {
		in, out := &in.AdminPasswordSecretRef, &out.AdminPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AdminUsername != nil {
		in, out := &in.AdminUsername, &out.AdminUsername
		*out = new(string)
		**out = **in
	}
	if in.BackupHour != nil {
		in, out := &in.BackupHour, &out.BackupHour
		*out = new(string)
		**out = **in
	}
	if in.BackupMinute != nil {
		in, out := &in.BackupMinute, &out.BackupMinute
		*out = new(string)
		**out = **in
	}
	if in.EnableIPv6 != nil {
		in, out := &in.EnableIPv6, &out.EnableIPv6
		*out = new(string)
		**out = **in
	}
	if in.IPFilter != nil {
		in, out := &in.IPFilter, &out.IPFilter
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Migration != nil {
		in, out := &in.Migration, &out.Migration
		*out = make([]MigrationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pg != nil {
		in, out := &in.Pg, &out.Pg
		*out = make([]PgUserConfigPgParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PgReadReplica != nil {
		in, out := &in.PgReadReplica, &out.PgReadReplica
		*out = new(string)
		**out = **in
	}
	if in.PgServiceToForkFrom != nil {
		in, out := &in.PgServiceToForkFrom, &out.PgServiceToForkFrom
		*out = new(string)
		**out = **in
	}
	if in.PgStatMonitorEnable != nil {
		in, out := &in.PgStatMonitorEnable, &out.PgStatMonitorEnable
		*out = new(string)
		**out = **in
	}
	if in.PgVersion != nil {
		in, out := &in.PgVersion, &out.PgVersion
		*out = new(string)
		**out = **in
	}
	if in.Pgbouncer != nil {
		in, out := &in.Pgbouncer, &out.Pgbouncer
		*out = make([]PgbouncerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pglookout != nil {
		in, out := &in.Pglookout, &out.Pglookout
		*out = make([]PglookoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateAccess != nil {
		in, out := &in.PrivateAccess, &out.PrivateAccess
		*out = make([]PrivateAccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivatelinkAccess != nil {
		in, out := &in.PrivatelinkAccess, &out.PrivatelinkAccess
		*out = make([]PrivatelinkAccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProjectToForkFrom != nil {
		in, out := &in.ProjectToForkFrom, &out.ProjectToForkFrom
		*out = new(string)
		**out = **in
	}
	if in.PublicAccess != nil {
		in, out := &in.PublicAccess, &out.PublicAccess
		*out = make([]PublicAccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecoveryTargetTime != nil {
		in, out := &in.RecoveryTargetTime, &out.RecoveryTargetTime
		*out = new(string)
		**out = **in
	}
	if in.ServiceToForkFrom != nil {
		in, out := &in.ServiceToForkFrom, &out.ServiceToForkFrom
		*out = new(string)
		**out = **in
	}
	if in.SharedBuffersPercentage != nil {
		in, out := &in.SharedBuffersPercentage, &out.SharedBuffersPercentage
		*out = new(string)
		**out = **in
	}
	if in.StaticIps != nil {
		in, out := &in.StaticIps, &out.StaticIps
		*out = new(string)
		**out = **in
	}
	if in.SynchronousReplication != nil {
		in, out := &in.SynchronousReplication, &out.SynchronousReplication
		*out = new(string)
		**out = **in
	}
	if in.Timescaledb != nil {
		in, out := &in.Timescaledb, &out.Timescaledb
		*out = make([]TimescaledbParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Variant != nil {
		in, out := &in.Variant, &out.Variant
		*out = new(string)
		**out = **in
	}
	if in.WorkMem != nil {
		in, out := &in.WorkMem, &out.WorkMem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PgUserConfigParameters.
func (in *PgUserConfigParameters) DeepCopy() *PgUserConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PgUserConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PgUserConfigPgObservation) DeepCopyInto(out *PgUserConfigPgObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PgUserConfigPgObservation.
func (in *PgUserConfigPgObservation) DeepCopy() *PgUserConfigPgObservation {
	if in == nil {
		return nil
	}
	out := new(PgUserConfigPgObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PgUserConfigPgParameters) DeepCopyInto(out *PgUserConfigPgParameters) {
	*out = *in
	if in.AutovacuumAnalyzeScaleFactor != nil {
		in, out := &in.AutovacuumAnalyzeScaleFactor, &out.AutovacuumAnalyzeScaleFactor
		*out = new(string)
		**out = **in
	}
	if in.AutovacuumAnalyzeThreshold != nil {
		in, out := &in.AutovacuumAnalyzeThreshold, &out.AutovacuumAnalyzeThreshold
		*out = new(string)
		**out = **in
	}
	if in.AutovacuumFreezeMaxAge != nil {
		in, out := &in.AutovacuumFreezeMaxAge, &out.AutovacuumFreezeMaxAge
		*out = new(string)
		**out = **in
	}
	if in.AutovacuumMaxWorkers != nil {
		in, out := &in.AutovacuumMaxWorkers, &out.AutovacuumMaxWorkers
		*out = new(string)
		**out = **in
	}
	if in.AutovacuumNaptime != nil {
		in, out := &in.AutovacuumNaptime, &out.AutovacuumNaptime
		*out = new(string)
		**out = **in
	}
	if in.AutovacuumVacuumCostDelay != nil {
		in, out := &in.AutovacuumVacuumCostDelay, &out.AutovacuumVacuumCostDelay
		*out = new(string)
		**out = **in
	}
	if in.AutovacuumVacuumCostLimit != nil {
		in, out := &in.AutovacuumVacuumCostLimit, &out.AutovacuumVacuumCostLimit
		*out = new(string)
		**out = **in
	}
	if in.AutovacuumVacuumScaleFactor != nil {
		in, out := &in.AutovacuumVacuumScaleFactor, &out.AutovacuumVacuumScaleFactor
		*out = new(string)
		**out = **in
	}
	if in.AutovacuumVacuumThreshold != nil {
		in, out := &in.AutovacuumVacuumThreshold, &out.AutovacuumVacuumThreshold
		*out = new(string)
		**out = **in
	}
	if in.BgwriterDelay != nil {
		in, out := &in.BgwriterDelay, &out.BgwriterDelay
		*out = new(string)
		**out = **in
	}
	if in.BgwriterFlushAfter != nil {
		in, out := &in.BgwriterFlushAfter, &out.BgwriterFlushAfter
		*out = new(string)
		**out = **in
	}
	if in.BgwriterLruMaxpages != nil {
		in, out := &in.BgwriterLruMaxpages, &out.BgwriterLruMaxpages
		*out = new(string)
		**out = **in
	}
	if in.BgwriterLruMultiplier != nil {
		in, out := &in.BgwriterLruMultiplier, &out.BgwriterLruMultiplier
		*out = new(string)
		**out = **in
	}
	if in.DeadlockTimeout != nil {
		in, out := &in.DeadlockTimeout, &out.DeadlockTimeout
		*out = new(string)
		**out = **in
	}
	if in.DefaultToastCompression != nil {
		in, out := &in.DefaultToastCompression, &out.DefaultToastCompression
		*out = new(string)
		**out = **in
	}
	if in.IdleInTransactionSessionTimeout != nil {
		in, out := &in.IdleInTransactionSessionTimeout, &out.IdleInTransactionSessionTimeout
		*out = new(string)
		**out = **in
	}
	if in.Jit != nil {
		in, out := &in.Jit, &out.Jit
		*out = new(string)
		**out = **in
	}
	if in.LogAutovacuumMinDuration != nil {
		in, out := &in.LogAutovacuumMinDuration, &out.LogAutovacuumMinDuration
		*out = new(string)
		**out = **in
	}
	if in.LogErrorVerbosity != nil {
		in, out := &in.LogErrorVerbosity, &out.LogErrorVerbosity
		*out = new(string)
		**out = **in
	}
	if in.LogLinePrefix != nil {
		in, out := &in.LogLinePrefix, &out.LogLinePrefix
		*out = new(string)
		**out = **in
	}
	if in.LogMinDurationStatement != nil {
		in, out := &in.LogMinDurationStatement, &out.LogMinDurationStatement
		*out = new(string)
		**out = **in
	}
	if in.LogTempFiles != nil {
		in, out := &in.LogTempFiles, &out.LogTempFiles
		*out = new(string)
		**out = **in
	}
	if in.MaxFilesPerProcess != nil {
		in, out := &in.MaxFilesPerProcess, &out.MaxFilesPerProcess
		*out = new(string)
		**out = **in
	}
	if in.MaxLocksPerTransaction != nil {
		in, out := &in.MaxLocksPerTransaction, &out.MaxLocksPerTransaction
		*out = new(string)
		**out = **in
	}
	if in.MaxLogicalReplicationWorkers != nil {
		in, out := &in.MaxLogicalReplicationWorkers, &out.MaxLogicalReplicationWorkers
		*out = new(string)
		**out = **in
	}
	if in.MaxParallelWorkers != nil {
		in, out := &in.MaxParallelWorkers, &out.MaxParallelWorkers
		*out = new(string)
		**out = **in
	}
	if in.MaxParallelWorkersPerGather != nil {
		in, out := &in.MaxParallelWorkersPerGather, &out.MaxParallelWorkersPerGather
		*out = new(string)
		**out = **in
	}
	if in.MaxPredLocksPerTransaction != nil {
		in, out := &in.MaxPredLocksPerTransaction, &out.MaxPredLocksPerTransaction
		*out = new(string)
		**out = **in
	}
	if in.MaxPreparedTransactions != nil {
		in, out := &in.MaxPreparedTransactions, &out.MaxPreparedTransactions
		*out = new(string)
		**out = **in
	}
	if in.MaxReplicationSlots != nil {
		in, out := &in.MaxReplicationSlots, &out.MaxReplicationSlots
		*out = new(string)
		**out = **in
	}
	if in.MaxSlotWalKeepSize != nil {
		in, out := &in.MaxSlotWalKeepSize, &out.MaxSlotWalKeepSize
		*out = new(string)
		**out = **in
	}
	if in.MaxStackDepth != nil {
		in, out := &in.MaxStackDepth, &out.MaxStackDepth
		*out = new(string)
		**out = **in
	}
	if in.MaxStandbyArchiveDelay != nil {
		in, out := &in.MaxStandbyArchiveDelay, &out.MaxStandbyArchiveDelay
		*out = new(string)
		**out = **in
	}
	if in.MaxStandbyStreamingDelay != nil {
		in, out := &in.MaxStandbyStreamingDelay, &out.MaxStandbyStreamingDelay
		*out = new(string)
		**out = **in
	}
	if in.MaxWalSenders != nil {
		in, out := &in.MaxWalSenders, &out.MaxWalSenders
		*out = new(string)
		**out = **in
	}
	if in.MaxWorkerProcesses != nil {
		in, out := &in.MaxWorkerProcesses, &out.MaxWorkerProcesses
		*out = new(string)
		**out = **in
	}
	if in.PgPartmanBgwDotInterval != nil {
		in, out := &in.PgPartmanBgwDotInterval, &out.PgPartmanBgwDotInterval
		*out = new(string)
		**out = **in
	}
	if in.PgPartmanBgwDotRole != nil {
		in, out := &in.PgPartmanBgwDotRole, &out.PgPartmanBgwDotRole
		*out = new(string)
		**out = **in
	}
	if in.PgStatStatementsDotTrack != nil {
		in, out := &in.PgStatStatementsDotTrack, &out.PgStatStatementsDotTrack
		*out = new(string)
		**out = **in
	}
	if in.TempFileLimit != nil {
		in, out := &in.TempFileLimit, &out.TempFileLimit
		*out = new(string)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.TrackActivityQuerySize != nil {
		in, out := &in.TrackActivityQuerySize, &out.TrackActivityQuerySize
		*out = new(string)
		**out = **in
	}
	if in.TrackCommitTimestamp != nil {
		in, out := &in.TrackCommitTimestamp, &out.TrackCommitTimestamp
		*out = new(string)
		**out = **in
	}
	if in.TrackFunctions != nil {
		in, out := &in.TrackFunctions, &out.TrackFunctions
		*out = new(string)
		**out = **in
	}
	if in.TrackIoTiming != nil {
		in, out := &in.TrackIoTiming, &out.TrackIoTiming
		*out = new(string)
		**out = **in
	}
	if in.WalSenderTimeout != nil {
		in, out := &in.WalSenderTimeout, &out.WalSenderTimeout
		*out = new(string)
		**out = **in
	}
	if in.WalWriterDelay != nil {
		in, out := &in.WalWriterDelay, &out.WalWriterDelay
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PgUserConfigPgParameters.
func (in *PgUserConfigPgParameters) DeepCopy() *PgUserConfigPgParameters {
	if in == nil {
		return nil
	}
	out := new(PgUserConfigPgParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PgbouncerObservation) DeepCopyInto(out *PgbouncerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PgbouncerObservation.
func (in *PgbouncerObservation) DeepCopy() *PgbouncerObservation {
	if in == nil {
		return nil
	}
	out := new(PgbouncerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PgbouncerParameters) DeepCopyInto(out *PgbouncerParameters) {
	*out = *in
	if in.AutodbIdleTimeout != nil {
		in, out := &in.AutodbIdleTimeout, &out.AutodbIdleTimeout
		*out = new(string)
		**out = **in
	}
	if in.AutodbMaxDBConnections != nil {
		in, out := &in.AutodbMaxDBConnections, &out.AutodbMaxDBConnections
		*out = new(string)
		**out = **in
	}
	if in.AutodbPoolMode != nil {
		in, out := &in.AutodbPoolMode, &out.AutodbPoolMode
		*out = new(string)
		**out = **in
	}
	if in.AutodbPoolSize != nil {
		in, out := &in.AutodbPoolSize, &out.AutodbPoolSize
		*out = new(string)
		**out = **in
	}
	if in.IgnoreStartupParameters != nil {
		in, out := &in.IgnoreStartupParameters, &out.IgnoreStartupParameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MinPoolSize != nil {
		in, out := &in.MinPoolSize, &out.MinPoolSize
		*out = new(string)
		**out = **in
	}
	if in.ServerIdleTimeout != nil {
		in, out := &in.ServerIdleTimeout, &out.ServerIdleTimeout
		*out = new(string)
		**out = **in
	}
	if in.ServerLifetime != nil {
		in, out := &in.ServerLifetime, &out.ServerLifetime
		*out = new(string)
		**out = **in
	}
	if in.ServerResetQueryAlways != nil {
		in, out := &in.ServerResetQueryAlways, &out.ServerResetQueryAlways
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PgbouncerParameters.
func (in *PgbouncerParameters) DeepCopy() *PgbouncerParameters {
	if in == nil {
		return nil
	}
	out := new(PgbouncerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PglookoutObservation) DeepCopyInto(out *PglookoutObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PglookoutObservation.
func (in *PglookoutObservation) DeepCopy() *PglookoutObservation {
	if in == nil {
		return nil
	}
	out := new(PglookoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PglookoutParameters) DeepCopyInto(out *PglookoutParameters) {
	*out = *in
	if in.MaxFailoverReplicationTimeLag != nil {
		in, out := &in.MaxFailoverReplicationTimeLag, &out.MaxFailoverReplicationTimeLag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PglookoutParameters.
func (in *PglookoutParameters) DeepCopy() *PglookoutParameters {
	if in == nil {
		return nil
	}
	out := new(PglookoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateAccessObservation) DeepCopyInto(out *PrivateAccessObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateAccessObservation.
func (in *PrivateAccessObservation) DeepCopy() *PrivateAccessObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateAccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateAccessParameters) DeepCopyInto(out *PrivateAccessParameters) {
	*out = *in
	if in.Pg != nil {
		in, out := &in.Pg, &out.Pg
		*out = new(string)
		**out = **in
	}
	if in.Pgbouncer != nil {
		in, out := &in.Pgbouncer, &out.Pgbouncer
		*out = new(string)
		**out = **in
	}
	if in.Prometheus != nil {
		in, out := &in.Prometheus, &out.Prometheus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateAccessParameters.
func (in *PrivateAccessParameters) DeepCopy() *PrivateAccessParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateAccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivatelinkAccessObservation) DeepCopyInto(out *PrivatelinkAccessObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivatelinkAccessObservation.
func (in *PrivatelinkAccessObservation) DeepCopy() *PrivatelinkAccessObservation {
	if in == nil {
		return nil
	}
	out := new(PrivatelinkAccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivatelinkAccessParameters) DeepCopyInto(out *PrivatelinkAccessParameters) {
	*out = *in
	if in.Pg != nil {
		in, out := &in.Pg, &out.Pg
		*out = new(string)
		**out = **in
	}
	if in.Pgbouncer != nil {
		in, out := &in.Pgbouncer, &out.Pgbouncer
		*out = new(string)
		**out = **in
	}
	if in.Prometheus != nil {
		in, out := &in.Prometheus, &out.Prometheus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivatelinkAccessParameters.
func (in *PrivatelinkAccessParameters) DeepCopy() *PrivatelinkAccessParameters {
	if in == nil {
		return nil
	}
	out := new(PrivatelinkAccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicAccessObservation) DeepCopyInto(out *PublicAccessObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicAccessObservation.
func (in *PublicAccessObservation) DeepCopy() *PublicAccessObservation {
	if in == nil {
		return nil
	}
	out := new(PublicAccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicAccessParameters) DeepCopyInto(out *PublicAccessParameters) {
	*out = *in
	if in.Pg != nil {
		in, out := &in.Pg, &out.Pg
		*out = new(string)
		**out = **in
	}
	if in.Pgbouncer != nil {
		in, out := &in.Pgbouncer, &out.Pgbouncer
		*out = new(string)
		**out = **in
	}
	if in.Prometheus != nil {
		in, out := &in.Prometheus, &out.Prometheus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicAccessParameters.
func (in *PublicAccessParameters) DeepCopy() *PublicAccessParameters {
	if in == nil {
		return nil
	}
	out := new(PublicAccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceIntegrationsObservation) DeepCopyInto(out *ServiceIntegrationsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceIntegrationsObservation.
func (in *ServiceIntegrationsObservation) DeepCopy() *ServiceIntegrationsObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceIntegrationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceIntegrationsParameters) DeepCopyInto(out *ServiceIntegrationsParameters) {
	*out = *in
	if in.IntegrationType != nil {
		in, out := &in.IntegrationType, &out.IntegrationType
		*out = new(string)
		**out = **in
	}
	if in.SourceServiceName != nil {
		in, out := &in.SourceServiceName, &out.SourceServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceIntegrationsParameters.
func (in *ServiceIntegrationsParameters) DeepCopy() *ServiceIntegrationsParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceIntegrationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagObservation) DeepCopyInto(out *TagObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagObservation.
func (in *TagObservation) DeepCopy() *TagObservation {
	if in == nil {
		return nil
	}
	out := new(TagObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagParameters) DeepCopyInto(out *TagParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagParameters.
func (in *TagParameters) DeepCopy() *TagParameters {
	if in == nil {
		return nil
	}
	out := new(TagParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimescaledbObservation) DeepCopyInto(out *TimescaledbObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimescaledbObservation.
func (in *TimescaledbObservation) DeepCopy() *TimescaledbObservation {
	if in == nil {
		return nil
	}
	out := new(TimescaledbObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimescaledbParameters) DeepCopyInto(out *TimescaledbParameters) {
	*out = *in
	if in.MaxBackgroundWorkers != nil {
		in, out := &in.MaxBackgroundWorkers, &out.MaxBackgroundWorkers
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimescaledbParameters.
func (in *TimescaledbParameters) DeepCopy() *TimescaledbParameters {
	if in == nil {
		return nil
	}
	out := new(TimescaledbParameters)
	in.DeepCopyInto(out)
	return out
}
