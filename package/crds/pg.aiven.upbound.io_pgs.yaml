---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: pgs.pg.aiven.upbound.io
spec:
  group: pg.aiven.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aiven
    kind: Pg
    listKind: PgList
    plural: pgs
    singular: pg
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Pg is the Schema for the Pgs API. <no value>
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PgSpec defines the desired state of Pg
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  additionalDiskSpace:
                    description: Additional disk space. Possible values depend on
                      the service type, the cloud provider and the project. Therefore,
                      reducing will result in the service rebalancing.
                    type: string
                  cloudName:
                    description: Defines where the cloud provider and region where
                      the service is hosted in. This can be changed freely after service
                      is created. Changing the value will trigger a potentially lengthy
                      migration process for the service. Format is cloud provider
                      name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash,
                      and the cloud provider specific region name. These are documented
                      on each Cloud provider's own support articles, like [here for
                      Google](https://cloud.google.com/compute/docs/regions-zones/)
                      and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).
                    type: string
                  diskSpace:
                    description: Service disk space. Possible values depend on the
                      service type, the cloud provider and the project. Therefore,
                      reducing will result in the service rebalancing.
                    type: string
                  maintenanceWindowDow:
                    description: Day of week when maintenance operations should be
                      performed. One monday, tuesday, wednesday, etc.
                    type: string
                  maintenanceWindowTime:
                    description: Time of day when maintenance operations should be
                      performed. UTC time in HH:mm:ss format.
                    type: string
                  pg:
                    description: PostgreSQL specific server provided values
                    items:
                      properties:
                        uriSecretRef:
                          description: PostgreSQL master connection URI
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      type: object
                    type: array
                  pgUserConfig:
                    description: Pg user configurable settings
                    items:
                      properties:
                        additionalBackupRegions:
                          description: Additional Cloud Regions for Backup Replication
                          items:
                            type: string
                          type: array
                        adminPasswordSecretRef:
                          description: Custom password for admin user. Defaults to
                            random string. This must be set only when a new service
                            is being created.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        adminUsername:
                          description: Custom username for admin user. This must be
                            set only when a new service is being created.
                          type: string
                        backupHour:
                          description: The hour of day (in UTC) when backup for the
                            service is started. New backup is only started if previous
                            backup has already completed.
                          type: string
                        backupMinute:
                          description: The minute of an hour when backup for the service
                            is started. New backup is only started if previous backup
                            has already completed.
                          type: string
                        enableIpv6:
                          description: Enable IPv6
                          type: string
                        ipFilter:
                          description: IP filter
                          items:
                            type: string
                          type: array
                        migration:
                          description: Migrate data from existing server
                          items:
                            properties:
                              dbname:
                                description: Database name for bootstrapping the initial
                                  connection
                                type: string
                              host:
                                description: Hostname or IP address of the server
                                  where to migrate data from
                                type: string
                              ignoreDbs:
                                description: Comma-separated list of databases, which
                                  should be ignored during migration (supported by
                                  MySQL only at the moment)
                                type: string
                              method:
                                description: The migration method to be used (currently
                                  supported only by Redis and MySQL service types)
                                type: string
                              passwordSecretRef:
                                description: Password for authentication with the
                                  server where to migrate data from
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                              port:
                                description: Port number of the server where to migrate
                                  data from
                                type: string
                              ssl:
                                description: The server where to migrate data from
                                  is secured with SSL
                                type: string
                              username:
                                description: User name for authentication with the
                                  server where to migrate data from
                                type: string
                            type: object
                          type: array
                        pg:
                          description: postgresql.conf configuration values
                          items:
                            properties:
                              autovacuumAnalyzeScaleFactor:
                                description: autovacuum_analyze_scale_factor
                                type: string
                              autovacuumAnalyzeThreshold:
                                description: autovacuum_analyze_threshold
                                type: string
                              autovacuumFreezeMaxAge:
                                description: autovacuum_freeze_max_age
                                type: string
                              autovacuumMaxWorkers:
                                description: autovacuum_max_workers
                                type: string
                              autovacuumNaptime:
                                description: autovacuum_naptime
                                type: string
                              autovacuumVacuumCostDelay:
                                description: autovacuum_vacuum_cost_delay
                                type: string
                              autovacuumVacuumCostLimit:
                                description: autovacuum_vacuum_cost_limit
                                type: string
                              autovacuumVacuumScaleFactor:
                                description: autovacuum_vacuum_scale_factor
                                type: string
                              autovacuumVacuumThreshold:
                                description: autovacuum_vacuum_threshold
                                type: string
                              bgwriterDelay:
                                description: bgwriter_delay
                                type: string
                              bgwriterFlushAfter:
                                description: bgwriter_flush_after
                                type: string
                              bgwriterLruMaxpages:
                                description: bgwriter_lru_maxpages
                                type: string
                              bgwriterLruMultiplier:
                                description: bgwriter_lru_multiplier
                                type: string
                              deadlockTimeout:
                                description: deadlock_timeout
                                type: string
                              defaultToastCompression:
                                description: default_toast_compression
                                type: string
                              idleInTransactionSessionTimeout:
                                description: idle_in_transaction_session_timeout
                                type: string
                              jit:
                                description: jit
                                type: string
                              logAutovacuumMinDuration:
                                description: log_autovacuum_min_duration
                                type: string
                              logErrorVerbosity:
                                description: log_error_verbosity
                                type: string
                              logLinePrefix:
                                description: log_line_prefix
                                type: string
                              logMinDurationStatement:
                                description: log_min_duration_statement
                                type: string
                              logTempFiles:
                                description: log_temp_files
                                type: string
                              maxFilesPerProcess:
                                description: max_files_per_process
                                type: string
                              maxLocksPerTransaction:
                                description: max_locks_per_transaction
                                type: string
                              maxLogicalReplicationWorkers:
                                description: max_logical_replication_workers
                                type: string
                              maxParallelWorkers:
                                description: max_parallel_workers
                                type: string
                              maxParallelWorkersPerGather:
                                description: max_parallel_workers_per_gather
                                type: string
                              maxPredLocksPerTransaction:
                                description: max_pred_locks_per_transaction
                                type: string
                              maxPreparedTransactions:
                                description: max_prepared_transactions
                                type: string
                              maxReplicationSlots:
                                description: max_replication_slots
                                type: string
                              maxSlotWalKeepSize:
                                description: max_slot_wal_keep_size
                                type: string
                              maxStackDepth:
                                description: max_stack_depth
                                type: string
                              maxStandbyArchiveDelay:
                                description: max_standby_archive_delay
                                type: string
                              maxStandbyStreamingDelay:
                                description: max_standby_streaming_delay
                                type: string
                              maxWalSenders:
                                description: max_wal_senders
                                type: string
                              maxWorkerProcesses:
                                description: max_worker_processes
                                type: string
                              pgPartmanBgwDotInterval:
                                description: pg_partman_bgw.interval
                                type: string
                              pgPartmanBgwDotRole:
                                description: pg_partman_bgw.role
                                type: string
                              pgStatStatementsDotTrack:
                                description: pg_stat_statements.track
                                type: string
                              tempFileLimit:
                                description: temp_file_limit
                                type: string
                              timezone:
                                description: timezone
                                type: string
                              trackActivityQuerySize:
                                description: track_activity_query_size
                                type: string
                              trackCommitTimestamp:
                                description: track_commit_timestamp
                                type: string
                              trackFunctions:
                                description: track_functions
                                type: string
                              trackIoTiming:
                                description: track_io_timing
                                type: string
                              walSenderTimeout:
                                description: wal_sender_timeout
                                type: string
                              walWriterDelay:
                                description: wal_writer_delay
                                type: string
                            type: object
                          type: array
                        pgReadReplica:
                          description: Should the service which is being forked be
                            a read replica (deprecated, use read_replica service integration
                            instead).
                          type: string
                        pgServiceToForkFrom:
                          description: Name of the PG Service from which to fork (deprecated,
                            use service_to_fork_from). This has effect only when a
                            new service is being created.
                          type: string
                        pgStatMonitorEnable:
                          description: Enable pg_stat_monitor extension if available
                            for the current cluster
                          type: string
                        pgVersion:
                          description: PostgreSQL major version
                          type: string
                        pgbouncer:
                          description: PGBouncer connection pooling settings
                          items:
                            properties:
                              autodbIdleTimeout:
                                description: If the automatically created database
                                  pools have been unused this many seconds, they are
                                  freed. If 0 then timeout is disabled. [seconds]
                                type: string
                              autodbMaxDbConnections:
                                description: Do not allow more than this many server
                                  connections per database (regardless of user). Setting
                                  it to 0 means unlimited.
                                type: string
                              autodbPoolMode:
                                description: PGBouncer pool mode
                                type: string
                              autodbPoolSize:
                                description: If non-zero then create automatically
                                  a pool of that size per user when a pool doesn't
                                  exist.
                                type: string
                              ignoreStartupParameters:
                                description: List of parameters to ignore when given
                                  in startup packet
                                items:
                                  type: string
                                type: array
                              minPoolSize:
                                description: Add more server connections to pool if
                                  below this number. Improves behavior when usual
                                  load comes suddenly back after period of total inactivity.
                                  The value is effectively capped at the pool size.
                                type: string
                              serverIdleTimeout:
                                description: If a server connection has been idle
                                  more than this many seconds it will be dropped.
                                  If 0 then timeout is disabled. [seconds]
                                type: string
                              serverLifetime:
                                description: The pooler will close an unused server
                                  connection that has been connected longer than this.
                                  [seconds]
                                type: string
                              serverResetQueryAlways:
                                description: Run server_reset_query (DISCARD ALL)
                                  in all pooling modes
                                type: string
                            type: object
                          type: array
                        pglookout:
                          description: PGLookout settings
                          items:
                            properties:
                              maxFailoverReplicationTimeLag:
                                description: max_failover_replication_time_lag
                                type: string
                            type: object
                          type: array
                        privateAccess:
                          description: Allow access to selected service ports from
                            private networks
                          items:
                            properties:
                              pg:
                                description: Allow clients to connect to pg with a
                                  DNS name that always resolves to the service's private
                                  IP addresses. Only available in certain network
                                  locations
                                type: string
                              pgbouncer:
                                description: Allow clients to connect to pgbouncer
                                  with a DNS name that always resolves to the service's
                                  private IP addresses. Only available in certain
                                  network locations
                                type: string
                              prometheus:
                                description: Allow clients to connect to prometheus
                                  with a DNS name that always resolves to the service's
                                  private IP addresses. Only available in certain
                                  network locations
                                type: string
                            type: object
                          type: array
                        privatelinkAccess:
                          description: Allow access to selected service components
                            through Privatelink
                          items:
                            properties:
                              pg:
                                description: Enable pg
                                type: string
                              pgbouncer:
                                description: Enable pgbouncer
                                type: string
                              prometheus:
                                description: Enable prometheus
                                type: string
                            type: object
                          type: array
                        projectToForkFrom:
                          description: Name of another project to fork a service from.
                            This has effect only when a new service is being created.
                          type: string
                        publicAccess:
                          description: Allow access to selected service ports from
                            the public Internet
                          items:
                            properties:
                              pg:
                                description: Allow clients to connect to pg from the
                                  public internet for service nodes that are in a
                                  project VPC or another type of private network
                                type: string
                              pgbouncer:
                                description: Allow clients to connect to pgbouncer
                                  from the public internet for service nodes that
                                  are in a project VPC or another type of private
                                  network
                                type: string
                              prometheus:
                                description: Allow clients to connect to prometheus
                                  from the public internet for service nodes that
                                  are in a project VPC or another type of private
                                  network
                                type: string
                            type: object
                          type: array
                        recoveryTargetTime:
                          description: Recovery target time when forking a service.
                            This has effect only when a new service is being created.
                          type: string
                        serviceToForkFrom:
                          description: Name of another service to fork from. This
                            has effect only when a new service is being created.
                          type: string
                        sharedBuffersPercentage:
                          description: shared_buffers_percentage
                          type: string
                        staticIps:
                          description: Static IP addresses
                          type: string
                        synchronousReplication:
                          description: Synchronous replication type. Note that the
                            service plan also needs to support synchronous replication.
                          type: string
                        timescaledb:
                          description: TimescaleDB extension configuration values
                          items:
                            properties:
                              maxBackgroundWorkers:
                                description: timescaledb.max_background_workers
                                type: string
                            type: object
                          type: array
                        variant:
                          description: Variant of the PostgreSQL service, may affect
                            the features that are exposed by default
                          type: string
                        workMem:
                          description: work_mem
                          type: string
                      type: object
                    type: array
                  plan:
                    description: Defines what kind of computing resources are allocated
                      for the service. It can be changed after creation, though there
                      are some restrictions when going to a smaller plan such as the
                      new plan must have sufficient amount of disk space to store
                      all current data and switching to a plan with fewer nodes might
                      not be supported. The basic plan names are `hobbyist`, `startup-x`,
                      `business-x` and `premium-x` where `x` is (roughly) the amount
                      of memory on each node (also other attributes like number of
                      CPUs and amount of disk space varies but naming is based on
                      memory). The available options can be seem from the [Aiven pricing
                      page](https://aiven.io/pricing).
                    type: string
                  project:
                    description: Identifies the project this resource belongs to.
                      To set up proper dependencies please refer to this variable
                      as a reference. This property cannot be changed, doing so forces
                      recreation of the resource.
                    type: string
                  projectVpcId:
                    description: Specifies the VPC the service should run in. If the
                      value is not set the service is not run inside a VPC. When set,
                      the value should be given as a reference to set up dependencies
                      correctly and the VPC must be in the same cloud and region as
                      the service itself. Project can be freely moved to and from
                      VPC after creation but doing so triggers migration to new servers
                      so the operation can take significant amount of time to complete
                      if the service has a lot of data.
                    type: string
                  serviceIntegrations:
                    description: Service integrations to specify when creating a service.
                      Not applied after initial service creation
                    items:
                      properties:
                        integrationType:
                          description: Type of the service integration. The only supported
                            value at the moment is `read_replica`
                          type: string
                        sourceServiceName:
                          description: Name of the source service
                          type: string
                      required:
                      - integrationType
                      - sourceServiceName
                      type: object
                    type: array
                  serviceName:
                    description: Specifies the actual name of the service. The name
                      cannot be changed later without destroying and re-creating the
                      service so name should be picked based on intended service usage
                      rather than current attributes.
                    type: string
                  staticIps:
                    description: Static IPs that are going to be associated with this
                      service. Please assign a value using the 'toset' function. Once
                      a static ip resource is in the 'assigned' state it cannot be
                      unbound from the node again
                    items:
                      type: string
                    type: array
                  tag:
                    description: Tags are key-value pairs that allow you to categorize
                      services.
                    items:
                      properties:
                        key:
                          description: Service tag key
                          type: string
                        value:
                          description: Service tag value
                          type: string
                      required:
                      - key
                      - value
                      type: object
                    type: array
                  terminationProtection:
                    description: Prevents the service from being deleted. It is recommended
                      to set this to `true` for all production services to prevent
                      unintentional service deletion. This does not shield against
                      deleting databases or topics but for services with backups much
                      of the content can at least be restored from backup in case
                      accidental deletion is done.
                    type: boolean
                required:
                - project
                - serviceName
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: PgStatus defines the observed state of Pg.
            properties:
              atProvider:
                properties:
                  components:
                    description: Service component information objects
                    items:
                      properties:
                        component:
                          type: string
                        host:
                          type: string
                        kafkaAuthenticationMethod:
                          type: string
                        port:
                          type: number
                        route:
                          type: string
                        ssl:
                          type: boolean
                        usage:
                          type: string
                      type: object
                    type: array
                  diskSpaceCap:
                    description: The maximum disk space of the service, possible values
                      depend on the service type, the cloud provider and the project.
                    type: string
                  diskSpaceDefault:
                    description: The default disk space of the service, possible values
                      depend on the service type, the cloud provider and the project.
                      Its also the minimum value for `disk_space`
                    type: string
                  diskSpaceStep:
                    description: The default disk space step of the service, possible
                      values depend on the service type, the cloud provider and the
                      project. `disk_space` needs to increment from `disk_space_default`
                      by increments of this size.
                    type: string
                  diskSpaceUsed:
                    description: Disk space that service is currently using
                    type: string
                  id:
                    type: string
                  pg:
                    description: PostgreSQL specific server provided values
                    items:
                      properties:
                        dbname:
                          description: Primary PostgreSQL database name
                          type: string
                        host:
                          description: PostgreSQL master node host IP or name
                          type: string
                        maxConnections:
                          description: Connection limit
                          type: number
                        port:
                          description: PostgreSQL port
                          type: number
                        sslmode:
                          description: PostgreSQL sslmode setting (currently always
                            "require")
                          type: string
                        user:
                          description: PostgreSQL admin user name
                          type: string
                      type: object
                    type: array
                  serviceHost:
                    description: The hostname of the service.
                    type: string
                  servicePort:
                    description: The port of the service
                    type: number
                  serviceType:
                    description: Aiven internal service type code
                    type: string
                  serviceUsername:
                    description: Username used for connecting to the service, if applicable
                    type: string
                  state:
                    description: Service state. One of `POWEROFF`, `REBALANCING`,
                      `REBUILDING` or `RUNNING`
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
